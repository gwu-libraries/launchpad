import os
import sys

DEBUG = True
ALLOWED_HOSTS = ['YOUR.PUBLIC.SERVER.NAME']

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

MANAGERS = ADMINS

if 'test' in sys.argv:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'test',
        },
        'voyager': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'test',
        }
    }
else:
    DATABASES = {
	'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'lp/lp/lp.db',
        },
        'voyager': {
            'ENGINE': '',
            'NAME': '',
            'USER': '',
            'PASSWORD': '',
            'HOST': '',
            'PORT': '',
        }
    }


TEMPLATE_DIRS = (
    os.path.join(os.path.dirname(__file__), 'templates'),
)


LIB_LOOKUP = {
    'AL': 'Washington Law (American)',
    'AU': 'American',
    'CU': 'Catholic',
    'DA': 'Dahlgren Medical (Georgetown)',
    'DC': 'UDC',
    'E-GovDoc': 'WRLC',
    'E-Resources': 'WRLC',
    'GA': 'Gallaudet',
    'GM': 'George Mason',
    'GT': 'Georgetown',
    'GTL': 'Georgetown Law',
    'GW': 'George Washington',
    # HD is Himmelfarb-Dahlgren items jointly held in storage
    'HD': 'Himmelfarb-Dahlgren',
    'HI': 'Himmelfarb Health Sciences (George Washington)',
    'HL': 'Howard Law',
    'HS': 'Howard Health Sciences',
    'HU': 'Howard',
    'JB': 'Jacob Burns Law (George Washington)',
    'LI': 'Catholic',
    'LL': 'George Mason Law Library',
    'MU': 'Marymount',
    'TR': 'Trinity',
    'WR': 'WRLC',
}


Z3950_SERVERS = {
    'LIBRARY_ID': {
        'IP': '',
        'PORT': '',
        'DB': '',
        'SYNTAX': '',
    }
}

INDEX_CODES = {
    'isbn': ['020N', '020A', 'ISB3', '020Z'],
    'issn': ['022A', '022Z', '022L'],
    'oclc': ['035A'],
    'lccn': ['010A']
    }


# Preferred library for bib record and top of the holdings list
# ex.: 'GW'
PREF_LIB = ''

# Institution name, link, etc. to display in HTML header
INSTITUTION_NAME = 'GW Libraries'
INSTITUTION_LINK = 'http://library.gwu.edu/'
HOST_INSTITUTION_NAME = 'The George Washington University'
HOST_INSTITUTION_LINK = 'http://www.gwu.edu/'

# Libraries that should be put at the bottom of the holdings list
# Optional, can be empty or used for libraries with restricted access, etc.
BOTTOM_LIBS = [] 

# Eligibility Options

INELIGIBLE_LIBRARIES = ['JB', 'HL', 'HS', 'AL', 'HI', 'GTL']

SHARED_LIBRARY_NAMES = ['WR', 'E-Resources', 'E-GovDoc', 'Internet Archive', 'IA']

INELIGIBLE_PERM_LOCS = ['REFERENCE', 'REF', 'RESERVE', 'NON-CIRC', 
    'RESTRICTED', 'ONLY', 'IN LIBRARY', 'ARCHIVES', 'KIEV', 'SPEC',
    'IBT', 'AUDIOTAPES', 'CD-ROM', 'DISCS', 'RECORDS', 'RUSH', 'VIDEOTAPES',
    'VIDEODISCS', 'MEDIA VIDEOS', 'DEAF DVD', 'DEAF VHS', 'IN PROCESS', 'SCS',
    'AU: LAW', 'LAW LIBRARY', 'QATAR', 'TURKEY', 'CAMPUS USE', 'MEDIA LAB',
    'UCLQ','DESIGN PERIODICALS','ILL','CONSTRUCTION','JSTOR', 'GW MUSEUM']

# Add electronic locations
ELECTRONIC_LOCS = ['AVAILABLE TO ALL', 'ONLINE', 'ELECTRONIC', 'INTERNET',
    'STREAMING', 'EREADER', 'E-BOOKS']

INELIGIBLE_PERM_LOCS += ELECTRONIC_LOCS

INELIGIBLE_TEMP_LOCS = ['RESERVE', 'BINDERY']

INELIGIBLE_STATUS = ['RENEWED', 'MISSING', 'LOST', 'OVERDUE', 'TRANSIT',
    'HOLD', 'DUE', 'CHARGED', 'UNAVAILABLE', 'WITHDRAWN', 'DAMAGED',
    'LIB USE ONLY', 'CHECKED OUT', 'IN PROCESS', 'AT BINDERY']

INELIGIBLE_ILL_LOCS = ['GELMAN MEDIA LAB','GELMAN SPECIAL COLLECTIONS', 'ONLINE', 'INTERNET']
                     
SCREAMING_LOCATIONS = [
    # NOTE: 'LAU' must preceed 'AU'
    ('LAU', 'Lauinger'),
    ('AU', 'American'),
    ('FLOOR', 'floor'),
    ('GELMAN', 'Gelman'),
    ('GROUND', 'ground'),    
    ('LOWER LEVEL', 'lower level'),
    ('MARYMOUNT', 'Marymount'),    
    ('MT VERNON CAMPUS', 'Mt. Vernon campus'),
    ('SCIENCE', 'Science'),    
    ('Stacks', 'stacks'),
    ('UNBOUND', 'unbound'),
    ('VAN NESS', 'Van Ness'),
    ('INTERNET', 'Online'),
    ('GW Medical: Restricted Circ - Borrowing through ILL only','Restricted Borrowing')
    ]

MAX_ITEMS = 6

MAX_SUBJECTS = 3

MAX_PERIODICALS = 3

INELIGIBLE_866_STATUS = ['Charged', 'Not Charged', 'Missing', 'LIB USE ONLY', 'SPC USE ONLY']

# Similarity ratio for open library and voyager titles
TITLE_SIMILARITY_RATIO = 0.6

ILLIAD_URL = 'https://www.aladin.wrlc.org/Z-WEB/ILLAuthClient?'

ILLIAD_SID = 'GWLP'

REFWORKS_URL = 'http://proxygw.wrlc.org/login?url=http://www.refworks.com/express/expressimport.asp?'

TITLE_CHARS = 255

FEEDBACK_FORM_URL = 'https://docs.google.com/spreadsheet/viewform?formkey=dDVfMTNIT0tneVFvNFZoQkNXc01SN2c6MQ'

TITLE_LEFTOVER_CHARS = 5

MARC_245_SUBFIELDS = ['$a', '$b', '$c', '$f', '$g', '$h', '$k', '$n',
    '$p', '$s', '$6', '$8']

STREAMING_AUDIO_TAGS = ['GW: Streaming Audio', 'GW Streaming Audio']

STREAMING_VIDEO_TAGS = ['GW: Streaming Video', 'GW Streaming Video']

GOVT_DOC_LINK = 'purl.access.gpo.gov'

BOUND_WITH_ITEM_LINK = 'findit.library.gwu.edu/item/'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
        'TIMEOUT': 60 * 60,  # default to one hour
        }
    }

ITEM_PAGE_CACHE_SECONDS = 60 * 60 # one hour

# If this value is present (not empty), GA bug will be added to html
GOOGLE_ANALYTICS_UA = ''
GOOGLE_ANALYTICS_AGGREGATE_UA = ''

# Link resolver information, only used in debug mode now
LINK_RESOLVER = {
    'base_url': 'http://findit.library.gwu.edu/go',
    'name': 'findit',
    }

API_LIST = [
    {'name': 'googlebooks',
     'url': 'https://www.googleapis.com/books/v1/volumes?q=%s:%s',
     'key': ''},
    {'name': 'worldcat',
     'url': 'http://www.worldcat.org/webservices/catalog/content/%s?wskey=%s',
     'key': ''}
    ]

# Show covers from openlibrary.org?
ENABLE_OPENLIBRARY_COVERS = True

# Show humans.txt?
ENABLE_HUMANS = False

# Show sitemaps in robots.txt?
ENABLE_SITEMAPS = False

# Relative path of sitemap files on local disk
SITEMAPS_DIR = os.path.join(os.path.dirname(__file__), '../ui/static/sitemaps')

# Base public URL of links; used by sitemap generator, no trailing slash
SITEMAPS_BASE_URL = 'http://findit.library.gwu.edu'

SER_SOL_API_URL = 'http://uz4ug4lz9g.openurl.xml.serialssolutions.com/openurlxml?version=1.0'

SER_SOL_API_MAX_ATTEMPTS = 3

SER_SOL_DBID_TEXT = 'TN5'

# summon api
SUMMON_ID = "gw"
SUMMON_SECRET_KEY = "you-will-need-this-to-do-searches"

#DDA Rush Print Request form URL
DDA_URL = 'https://docs.google.com/a/email.gwu.edu/forms/d/1pbd5Ge2zCDMtbGW5SgL-TwsE7wzNuCDNpQUlpa2NvcE/formResponse'

